// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  name String
  email String @unique
  password String
  role Role 
  emailVerificationToken String?
  emailVerified Boolean @default(false)
  
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

   // Define the one-to-many relationship
  companies             Company[] // A user can have many companies


}

enum Role{
  LISTENER
  NARRATOR
  ADMIN
  PUBLISHER
}

model Book{

  id String @id @default(cuid())
  title String
  description String
  durationInHours Int
  durationInMinutes Int
  coverImage String
  authorName String
  narratorName String
  summary String @db.LongText
  releaseDate DateTime
  language String
  publisher String
  rating Int
  colorCode String
}

model Company{
id String @id 
companyName String
address String
telephone String
companyRegNo String
kraPin String
companyRegNoPdfUrl String
kraPinPdfUrl String

// Add a foreign key to reference the user
  userId                String   

  // Define the relationship with the User model
  user                  User     @relation(fields: [userId], references: [id])


title String?
language String?
categories String?
date DateTime?
ISBNDOIISRC String?
synopsis String? @db.LongText
narrator String?
narrationStyleSlow Boolean?
narrationStyleFast Boolean?
narrationStyleIntimate Boolean?
narrationStyleCasual Boolean?
narrationStyleStatic Boolean?
narrationStyleOratoric Boolean?
audioSampleURL String?
pdfURL String?
rightsHolder Boolean?
  
}